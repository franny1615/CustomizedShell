# NGINX
sudo apt update
sudo apt install nginx
sudo systemctl start nginx

# modify nginx.conf, remove the http directive
sudo vim /etc/nginx/nginx.conf

# remove default
cd /etc/nginx/sites-enabled
sudo rm default
# edit nginx.conf to look like
sudo vim /etc/nginx/nginx.conf
http {
  map $http_connection $connection_upgrade {
    "~*Upgrade" $http_connection;
    default keep-alive;
  }

  server {
    listen        80;
    server_name   example.com *.example.com;
    location / {
        proxy_pass         http://127.0.0.1:5000/;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
  }
}

# open port 80
sudo ufw allow 80

# reload nginx
sudo nginx -t
sudo nginx -s reload

# create linux service to monitor server 
sudo vim /etc/systemd/system/kestrel-inventoryapp.service 

# paste the following 
[Unit]
Description=Example .NET Web API App running on Linux

[Service]
WorkingDirectory=/var/www/inventoryApp/publish
ExecStart=/var/www/inventoryApp/publish/Inventory.API 
Restart=always
# Restart service after 10 seconds if the dotnet service crashes:
RestartSec=10
KillSignal=SIGINT
SyslogIdentifier=dotnet-inventoryapp
User=www-data
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment=DOTNET_NOLOGO=true
Environment=DB_CS=Server=<insert database connection>
Environment=JWT_AUD=<insert audience>
Environment=JWT_ISS=<insert issuer>
Environment=JWT_KEY=<insert private key>

[Install]
WantedBy=multi-user.target

# start the service 
sudo systemctl enable kestrel-inventoryapp.service

# check start/status checks 
sudo systemctl start kestrel-inventoryapp.service 
sudo systemctl status kestrel-inventoryapp.service 

# view logs 
sudo journalctl -fu kestrel-inventoryapp.service 

# SQL SETUP
