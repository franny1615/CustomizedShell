<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Product" xml:space="preserve">
    <value>Inventory Management</value>
  </data>
  <data name="AlreadyRegistered" xml:space="preserve">
    <value>Already registered?</value>
  </data>
  <data name="EmployeeLogin" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="AdminLogin" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="OR" xml:space="preserve">
    <value>OR</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="SampleEmail" xml:space="preserve">
    <value>Email needed for password resets.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid email format.</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>Verify</value>
  </data>
  <data name="AccountCreation" xml:space="preserve">
    <value>
Account creation is free. 

All features are enabled at no cost for the first three months.

May delete account at any time. 
    </value>
  </data>
  <data name="VerificationCodeSent" xml:space="preserve">
    <value>A verification code was sent to</value>
  </data>
  <data name="VerificationCodeEnter" xml:space="preserve">
    <value>Please enter the code below</value>
  </data>
  <data name="VerificationCode" xml:space="preserve">
    <value>Verification Code</value>
  </data>
  <data name="VerifyEmail" xml:space="preserve">
    <value>Verify Email</value>
  </data>
  <data name="FinishRegistration" xml:space="preserve">
    <value>Finish Registration</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="EmailVerified" xml:space="preserve">
    <value>Email Verified</value>
  </data>
  <data name="Review" xml:space="preserve">
    <value>Review</value>
  </data>
  <data name="UsernameInUse" xml:space="preserve">
    <value>Username taken. Please choose another.</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="OwnerLogin" xml:space="preserve">
    <value>Owner Login</value>
  </data>
  <data name="UsernamePossiblyWrong" xml:space="preserve">
    <value>Username possibly incorrect.</value>
  </data>
  <data name="PasswordPossiblyWrong" xml:space="preserve">
    <value>Password possibly incorrect.</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="CompanyId" xml:space="preserve">
    <value>Company ID</value>
  </data>
  <data name="CompanyIdSupportText" xml:space="preserve">
    <value>Employees need this value to sign into app.</value>
  </data>
  <data name="EmailSupportText" xml:space="preserve">
    <value>Used for communications and password resets.</value>
  </data>
  <data name="LicenseId" xml:space="preserve">
    <value>License ID</value>
  </data>
  <data name="UpdateEmail" xml:space="preserve">
    <value>Update Email</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Customize" xml:space="preserve">
    <value>Customize</value>
  </data>
  <data name="DarkMode" xml:space="preserve">
    <value>Dark Mode</value>
  </data>
  <data name="EnterCode" xml:space="preserve">
    <value>Enter verification code.</value>
  </data>
  <data name="EnterNewEmail" xml:space="preserve">
    <value>Enter a new email address.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SendCode" xml:space="preserve">
    <value>Send Code</value>
  </data>
  <data name="StepOne" xml:space="preserve">
    <value>Step One</value>
  </data>
  <data name="StepThree" xml:space="preserve">
    <value>Step Three</value>
  </data>
  <data name="StepTwo" xml:space="preserve">
    <value>Step Two</value>
  </data>
  <data name="VerifyCode" xml:space="preserve">
    <value>Verify Code</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="EnterCodeSentTo" xml:space="preserve">
    <value>Enter code sent to {0}.</value>
  </data>
  <data name="NewPasswordInstruction" xml:space="preserve">
    <value>Enter a new password.</value>
  </data>
  <data name="NoUsers" xml:space="preserve">
    <value>No Employees</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="AddEmployee" xml:space="preserve">
    <value>Add Employee</value>
  </data>
  <data name="EditEmployee" xml:space="preserve">
    <value>Edit Employee</value>
  </data>
  <data name="NewEmployee" xml:space="preserve">
    <value>New Employee</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="Adding" xml:space="preserve">
    <value>Adding...</value>
  </data>
  <data name="DeleteUser" xml:space="preserve">
    <value>Delete User</value>
  </data>
  <data name="DeleteUserPrompt" xml:space="preserve">
    <value>Are you sure you want to delete user?</value>
  </data>
  <data name="Deleting" xml:space="preserve">
    <value>Deleting...</value>
  </data>
  <data name="EditUserPasswordInfo" xml:space="preserve">
    <value>Leave blank if not changing password</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorOccurred" xml:space="preserve">
    <value>Error occurred. Please try again.</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Saving" xml:space="preserve">
    <value>Saving...</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="UserLogin" xml:space="preserve">
    <value>Employee Login</value>
  </data>
  <data name="Inventory" xml:space="preserve">
    <value>Inventory</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="Locations" xml:space="preserve">
    <value>Locations</value>
  </data>
  <data name="Statuses" xml:space="preserve">
    <value>Statuses</value>
  </data>
  <data name="No Statuses." xml:space="preserve">
    <value>No Statuses.</value>
  </data>
  <data name="No Locations." xml:space="preserve">
    <value>No Locations.</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Add Location" xml:space="preserve">
    <value>Add Location</value>
  </data>
  <data name="Barcode" xml:space="preserve">
    <value>Barcode</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Edit Location" xml:space="preserve">
    <value>Edit Location</value>
  </data>
  <data name="Are you sure you want to delete?" xml:space="preserve">
    <value>Are you sure you want to delete?</value>
  </data>
  <data name="Delete Location" xml:space="preserve">
    <value>Delete Location</value>
  </data>
  <data name="Add Status" xml:space="preserve">
    <value>Add Status</value>
  </data>
  <data name="Delete Status" xml:space="preserve">
    <value>Delete Status</value>
  </data>
  <data name="Edit Status" xml:space="preserve">
    <value>Edit Status</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="Last Edited" xml:space="preserve">
    <value>Last Edited</value>
  </data>
  <data name="No Inventory." xml:space="preserve">
    <value>No Inventory.</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Add Quantity Type" xml:space="preserve">
    <value>Add Quantity Type</value>
  </data>
  <data name="Delete Quantity Type" xml:space="preserve">
    <value>Delete Quantity Type</value>
  </data>
  <data name="Edit Quantity Type" xml:space="preserve">
    <value>Edit Quantity Type</value>
  </data>
  <data name="License Expired" xml:space="preserve">
    <value>License Expired</value>
  </data>
  <data name="No Quantity Types." xml:space="preserve">
    <value>No Quantity Types.</value>
  </data>
  <data name="Quantity Types" xml:space="preserve">
    <value>Quantity Types</value>
  </data>
  <data name="Delete Account" xml:space="preserve">
    <value>Delete Account</value>
  </data>
  <data name="DeleteAccountPrompt" xml:space="preserve">
    <value>Are you sure you want to delete account? It will NOT be recoverable, and all data will be lost. </value>
  </data>
  <data name="Add Inventory" xml:space="preserve">
    <value>Add Inventory</value>
  </data>
  <data name="Edit Inventory" xml:space="preserve">
    <value>Edit Inventory</value>
  </data>
  <data name="Delete Inventory" xml:space="preserve">
    <value>Delete Inventory</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Qty Type" xml:space="preserve">
    <value>Qty Type</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Select Location" xml:space="preserve">
    <value>Select Location</value>
  </data>
  <data name="Select Qty Type" xml:space="preserve">
    <value>Select Qty Type</value>
  </data>
  <data name="Select Status" xml:space="preserve">
    <value>Select Status</value>
  </data>
  <data name="Change Description" xml:space="preserve">
    <value>Change Description</value>
  </data>
  <data name="Change Location" xml:space="preserve">
    <value>Change Location</value>
  </data>
  <data name="Change Qty Type" xml:space="preserve">
    <value>Change Qty Type</value>
  </data>
  <data name="Change Quantity" xml:space="preserve">
    <value>Change Quantity</value>
  </data>
  <data name="Change Status" xml:space="preserve">
    <value>Change Status</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Inventory Permissions" xml:space="preserve">
    <value>Inventory Permissions</value>
  </data>
  <data name="License Expiration Date" xml:space="preserve">
    <value>License Expiration Date</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="No Inventory History." xml:space="preserve">
    <value>No Inventory History.</value>
  </data>
</root>